{
  "version": 3,
  "sources": ["../../react-photo-view/src/hooks/useMethods.ts", "../../react-photo-view/src/hooks/useSetState.ts", "../../react-photo-view/src/photo-context.ts", "../../react-photo-view/src/utils/isTouchDevice.ts", "../../react-photo-view/src/utils/limitTarget.ts", "../../react-photo-view/src/variables.ts", "../../react-photo-view/src/hooks/useIsomorphicLayoutEffect.ts", "../../react-photo-view/src/hooks/useEventListener.ts", "../../react-photo-view/src/components/SlidePortal.tsx", "../../react-photo-view/src/components/CloseIcon.tsx", "../../react-photo-view/src/components/ArrowLeft.tsx", "../../react-photo-view/src/components/ArrowRight.tsx", "../../react-photo-view/src/components/PreventScroll.tsx", "../../react-photo-view/src/utils/getMultipleTouchPosition.ts", "../../react-photo-view/src/utils/edgeHandle.ts", "../../react-photo-view/src/utils/getPositionOnMoveOrScale.ts", "../../react-photo-view/src/utils/getRotateSize.ts", "../../react-photo-view/src/utils/getSuitableImageSize.ts", "../../react-photo-view/src/hooks/useDebounceCallback.ts", "../../react-photo-view/src/hooks/useScrollPosition.ts", "../../react-photo-view/src/hooks/useAnimationOrigin.tsx", "../../react-photo-view/src/hooks/useMountedRef.ts", "../../react-photo-view/src/components/Spinner.tsx", "../../react-photo-view/src/Photo.tsx", "../../react-photo-view/src/PhotoBox.tsx", "../../react-photo-view/src/hooks/useContinuousTap.ts", "../../react-photo-view/src/hooks/useAnimationPosition.ts", "../../react-photo-view/src/hooks/useTargetScale.ts", "../../react-photo-view/src/PhotoSlider.tsx", "../../react-photo-view/src/hooks/useAnimationVisible.tsx", "../../react-photo-view/src/hooks/useForkedVariable.ts", "../../react-photo-view/src/hooks/useAdjacentImages.ts", "../../react-photo-view/src/PhotoProvider.tsx", "../../react-photo-view/src/PhotoView.tsx", "../../react-photo-view/src/hooks/useInitial.ts"],
  "sourcesContent": ["import { useRef } from 'react';\n\n/**\n * Hook of persistent methods\n */\nexport default function useMethods<T extends Record<string, (...args: any[]) => any>>(fn: T) {\n  const { current } = useRef({\n    fn,\n    curr: undefined as T | undefined,\n  });\n  current.fn = fn;\n\n  if (!current.curr) {\n    const curr = Object.create(null);\n    Object.keys(fn).forEach((key) => {\n      curr[key] = (...args: unknown[]) => current.fn[key].call(current.fn, ...args);\n    });\n    current.curr = curr;\n  }\n\n  return current.curr as T;\n}\n", "import { useReducer } from 'react';\n\nexport default function useSetState<S extends Record<string, any>>(initialState: S) {\n  return useReducer(\n    (state: S, action: Partial<S> | ((state: S) => Partial<S>)) => ({\n      ...state,\n      ...(typeof action === 'function' ? action(state) : action),\n    }),\n    initialState,\n  );\n}\n", "import { createContext } from 'react';\nimport type { DataType } from './types';\n\nexport type UpdateItemType = (dataType: DataType) => void;\n\nexport interface PhotoContextType {\n  show: (key: number) => void;\n  update: UpdateItemType;\n  remove: (key: number) => void;\n  nextId: () => number;\n}\n\nexport default createContext<PhotoContextType>(undefined as unknown as PhotoContextType);\n", "/**\n * 是否支持触摸设备\n */\nconst isTouchDevice = typeof window !== 'undefined' && 'ontouchstart' in window;\n\nexport default isTouchDevice;\n", "import { maxScale, minScale } from '../variables';\n\nexport const limitNumber = (value: number, min: number, max: number) => {\n  return Math.max(Math.min(value, max), min);\n};\n\n/**\n * 限制最大/最小缩放\n */\nexport const limitScale = (scale: number, max: number = 0, buffer: number = 0) => {\n  return limitNumber(scale, minScale * (1 - buffer), Math.max(maxScale, max) * (1 + buffer));\n};\n", "/**\n * 最大触摸时间\n */\nexport const maxTouchTime = 200;\n\n/**\n * 默认动画速度\n */\nexport const defaultSpeed = 400;\n\n/**\n * 默认动画函数\n */\nexport const defaultEasing = 'cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n/**\n * 最大滑动切换图片距离\n */\nexport const maxMoveOffset = 40;\n\n/**\n * 图片的间隔\n */\nexport const horizontalOffset = 20;\n\n/**\n * 最小初始响应距离\n */\nexport const minStartTouchOffset = 20;\n\n/**\n * 默认背景透明度\n */\nexport const defaultOpacity = 1;\n\n/**\n * 最小缩放度\n */\nexport const minScale = 1;\n\n/**\n * 最大缩放度（若图片足够大，则会超出）\n */\nexport const maxScale = 6;\n\n/**\n * 最小长图模式比例\n */\nexport const longModeRatio = 3;\n\n/**\n * 缩放弹性缓冲\n */\nexport const scaleBuffer = 0.2;\n\n/**\n * 最大等待动画时间\n */\nexport const maxWaitAnimationTime = 250;\n", "import { useEffect, useLayoutEffect } from 'react';\n\nconst isSSR = typeof window === 'undefined' || /ServerSideRendering/.test(navigator && navigator.userAgent);\n\nexport default isSSR ? useEffect : useLayoutEffect;\n", "import { useEffect, useRef } from 'react';\n\nexport default function useEventListener<K extends keyof WindowEventMap>(\n  type: K | undefined,\n  fn: (evt: WindowEventMap[K]) => void,\n  options?: AddEventListenerOptions,\n) {\n  const latest = useRef(fn);\n  latest.current = fn;\n\n  useEffect(() => {\n    function wrapper(evt: WindowEventMap[K]) {\n      latest.current(evt);\n    }\n    if (type) {\n      window.addEventListener(type, wrapper, options);\n    }\n    return () => {\n      if (type) {\n        window.removeEventListener(type, wrapper);\n      }\n    };\n  }, [type]);\n}\n", "import React from 'react';\nimport { createPortal } from 'react-dom';\nimport './SlidePortal.less';\n\nexport interface ISliderPortalProps extends React.HTMLAttributes<HTMLDivElement> {\n  container?: HTMLElement;\n}\n\nfunction SlidePortal({ container = document.body, ...rest }: ISliderPortalProps) {\n  return createPortal(<div {...rest} />, container);\n}\n\nexport default SlidePortal;\n", "import React from 'react';\n\nfunction CloseIcon(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M607.5 205.5l-178.5 178.5 178.5 178.5-45 45-178.5-178.5-178.5 178.5-45-45 178.5-178.5-178.5-178.5 45-45 178.5 178.5 178.5-178.5z\" />\n    </svg>\n  );\n}\n\nexport default CloseIcon;\n", "import React from 'react';\n\nfunction ArrowLeft(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M640.5 352.5v63h-390l178.5 180-45 45-256.5-256.5 256.5-256.5 45 45-178.5 180h390z\" />\n    </svg>\n  );\n}\n\nexport default ArrowLeft;\n", "import React from 'react';\n\nfunction ArrowRight(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M384 127.5l256.5 256.5-256.5 256.5-45-45 178.5-180h-390v-63h390l-178.5-180z\" />\n    </svg>\n  );\n}\n\nexport default ArrowRight;\n", "import { useEffect } from 'react';\n\nexport default function PreventScroll() {\n  useEffect(() => {\n    const { style } = document.body;\n    const lastOverflow = style.overflow;\n    style.overflow = 'hidden';\n\n    return () => {\n      style.overflow = lastOverflow;\n    };\n  }, []);\n\n  return null;\n}\n", "import type React from 'react';\n\n/**\n * 从 Touch 事件中获取两个触控中心位置\n */\nexport default function getMultipleTouchPosition(\n  evt: TouchEvent | React.TouchEvent,\n): [clientX: number, clientY: number, touchLength: number] {\n  const { clientX, clientY } = evt.touches[0];\n  if (evt.touches.length >= 2) {\n    const { clientX: nextClientX, clientY: nextClientY } = evt.touches[1];\n    return [\n      (clientX + nextClientX) / 2,\n      (clientY + nextClientY) / 2,\n      Math.sqrt((nextClientX - clientX) ** 2 + (nextClientY - clientY) ** 2),\n    ];\n  }\n  return [clientX, clientY, 0];\n}\n", "import type { CloseEdgeType, ReachType, TouchStartType } from '../types';\n\n/**\n * 获取接触边缘类型\n */\nexport const getReachType = (\n  initialTouchState: TouchStartType,\n  horizontalCloseEdge: CloseEdgeType,\n  verticalCloseEdge: CloseEdgeType,\n  reachPosition: ReachType,\n): ReachType => {\n  if ((horizontalCloseEdge && initialTouchState === 1) || reachPosition === 'x') {\n    return 'x';\n  }\n  if ((verticalCloseEdge && initialTouchState > 1) || reachPosition === 'y') {\n    return 'y';\n  }\n  return undefined;\n};\n\n/**\n * 计算接触边缘位置\n * @param position - x/y\n * @param scale\n * @param size - width/height\n * @param innerSize - innerWidth/innerHeight\n * @return [CloseEdgeType, position]\n */\nexport const computePositionEdge = (position: number, scale: number, size: number, innerSize: number) => {\n  const currentWidth = size * scale;\n  // 图片超出的宽度\n  const outOffset = (currentWidth - innerSize) / 2;\n  let closedEdge: CloseEdgeType;\n\n  let current = position;\n  if (currentWidth <= innerSize) {\n    closedEdge = 1;\n    current = 0;\n  } else if (position > 0 && outOffset - position <= 0) {\n    closedEdge = 2;\n    current = outOffset;\n  } else if (position < 0 && outOffset + position <= 0) {\n    closedEdge = 3;\n    current = -outOffset;\n  }\n\n  return [closedEdge, current] as const;\n};\n", "import { longModeRatio } from '../variables';\nimport { computePositionEdge } from './edgeHandle';\n\n/**\n * 获取移动或缩放之后的中心点\n */\nexport default function getPositionOnMoveOrScale(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  scale: number,\n  toScale: number,\n  clientX: number = innerWidth / 2,\n  clientY: number = innerHeight / 2,\n  offsetX: number = 0,\n  offsetY: number = 0,\n) {\n  // 是否接触边缘\n  const [closedEdgeX] = computePositionEdge(x, toScale, width, innerWidth);\n  const [closedEdgeY] = computePositionEdge(y, toScale, height, innerHeight);\n\n  const centerClientX = innerWidth / 2;\n  const centerClientY = innerHeight / 2;\n\n  // 坐标偏移\n  const lastPositionX = centerClientX + x;\n  const lastPositionY = centerClientY + y;\n\n  // 偏移位置\n  const originX = clientX - (clientX - lastPositionX) * (toScale / scale) - centerClientX;\n  const originY = clientY - (clientY - lastPositionY) * (toScale / scale) - centerClientY;\n  // 长图模式无左右反馈\n  const longModeEdge = height / width >= longModeRatio && width * toScale === innerWidth;\n  // 超出边缘距离减半\n  return {\n    x: originX + (longModeEdge ? 0 : closedEdgeX ? offsetX / 2 : offsetX),\n    y: originY + (closedEdgeY ? offsetY / 2 : offsetY),\n    lastCX: clientX,\n    lastCY: clientY,\n  };\n}\n", "/**\n * 获取旋转后的宽高\n */\nexport default function getRotateSize(rotate: number, width: number, height: number) {\n  const isVertical = rotate % 180 !== 0;\n\n  // 若图片不是水平则调换属性\n  if (isVertical) {\n    return [height, width, isVertical] as const;\n  }\n\n  return [width, height, isVertical] as const;\n}\n", "import { longModeRatio } from '../variables';\nimport getRotateSize from './getRotateSize';\n\n/**\n * 获取图片合适的大小\n */\nexport default function getSuitableImageSize(naturalWidth: number, naturalHeight: number, rotate: number) {\n  const [currentWidth, currentHeight, isVertical] = getRotateSize(rotate, innerWidth, innerHeight);\n\n  let y = 0;\n  let width = currentWidth;\n  let height = currentHeight;\n\n  // 自适应宽高\n  const autoWidth = (naturalWidth / naturalHeight) * currentHeight;\n  const autoHeight = (naturalHeight / naturalWidth) * currentWidth;\n\n  if (naturalWidth < currentWidth && naturalHeight < currentHeight) {\n    width = naturalWidth;\n    height = naturalHeight;\n  } else if (naturalWidth < currentWidth && naturalHeight >= currentHeight) {\n    width = autoWidth;\n  } else if (naturalWidth >= currentWidth && naturalHeight < currentHeight) {\n    height = autoHeight;\n  } else if (naturalWidth / naturalHeight > currentWidth / currentHeight) {\n    height = autoHeight;\n  }\n  // 长图模式\n  else if (naturalHeight / naturalWidth >= longModeRatio && !isVertical) {\n    height = autoHeight;\n    y = (height - currentHeight) / 2;\n  } else {\n    width = autoWidth;\n  }\n  return {\n    width,\n    height,\n    x: 0,\n    y,\n    pause: true,\n  };\n}\n", "import { useCallback, useRef } from 'react';\n\ninterface DebounceCallback<CallbackArguments extends any[]> {\n  (...args: CallbackArguments): void;\n  cancel: () => void;\n}\n\nexport default function useDebounceCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  {\n    leading = false,\n    maxWait,\n    wait = maxWait || 0,\n  }: {\n    leading?: boolean;\n    maxWait?: number;\n    wait?: number;\n  },\n): DebounceCallback<CallbackArguments> {\n  const callbackRef = useRef(callback);\n  callbackRef.current = callback;\n\n  const prev = useRef(0);\n  const trailingTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const fn = useCallback(\n    (...args: CallbackArguments) => {\n      const now = Date.now();\n\n      function call() {\n        prev.current = now;\n        clearTrailing();\n        callbackRef.current.apply(null, args);\n      }\n      const last = prev.current;\n      const offset = now - last;\n      // leading\n      if (last === 0) {\n        if (leading) {\n          call();\n        }\n        prev.current = now;\n      }\n\n      // body\n      if (maxWait !== undefined) {\n        if (offset > maxWait) {\n          call();\n          return;\n        }\n      } else if (offset < wait) {\n        prev.current = now;\n      }\n\n      // trailing\n      clearTrailing();\n      trailingTimeout.current = setTimeout(() => {\n        call();\n        prev.current = 0;\n      }, wait);\n    },\n    [wait, maxWait, leading],\n  );\n  (fn as DebounceCallback<CallbackArguments>).cancel = clearTrailing;\n\n  return fn as DebounceCallback<CallbackArguments>;\n}\n", "import { computePositionEdge } from '../utils/edgeHandle';\nimport getPositionOnMoveOrScale from '../utils/getPositionOnMoveOrScale';\nimport getRotateSize from '../utils/getRotateSize';\nimport { defaultSpeed, maxTouchTime } from '../variables';\nimport useMethods from './useMethods';\n\n// 触边运动反馈\nconst rebound = (start: number, bound: number, callback: (spatial: number) => boolean) =>\n  easeOutMove(\n    start,\n    bound,\n    callback,\n    defaultSpeed / 4,\n    (t) => t,\n    () => easeOutMove(bound, start, callback),\n  );\n\n/**\n * 物理滚动到具体位置\n */\nexport default function useScrollPosition<C extends (spatial: number) => boolean>(\n  callbackX: C,\n  callbackY: C,\n  callbackS: C,\n) {\n  const callback = useMethods({\n    X: (spatial: number) => callbackX(spatial),\n    Y: (spatial: number) => callbackY(spatial),\n    S: (spatial: number) => callbackS(spatial),\n  });\n\n  return (\n    x: number,\n    y: number,\n    lastX: number,\n    lastY: number,\n    width: number,\n    height: number,\n    scale: number,\n    safeScale: number,\n    lastScale: number,\n    rotate: number,\n    touchedTime: number,\n  ) => {\n    const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\n    // 开始状态下边缘触发状态\n    const [beginEdgeX, beginX] = computePositionEdge(x, safeScale, currentWidth, innerWidth);\n    const [beginEdgeY, beginY] = computePositionEdge(y, safeScale, currentHeight, innerHeight);\n    const moveTime = Date.now() - touchedTime;\n\n    // 时间过长、超出安全范围的情况下不执行滚动逻辑，恢复安全范围\n    if (moveTime >= maxTouchTime || safeScale !== scale || Math.abs(lastScale - scale) > 1) {\n      // 计算中心缩放点\n      const { x: nextX, y: nextY } = getPositionOnMoveOrScale(x, y, width, height, scale, safeScale);\n      const targetX = beginEdgeX ? beginX : nextX !== x ? nextX : null;\n      const targetY = beginEdgeY ? beginY : nextY !== y ? nextY : null;\n\n      if (targetX !== null) {\n        easeOutMove(x, targetX, callback.X);\n      }\n      if (targetY !== null) {\n        easeOutMove(y, targetY, callback.Y);\n      }\n      if (safeScale !== scale) {\n        easeOutMove(scale, safeScale, callback.S);\n      }\n      return;\n    }\n\n    // 初始速度\n    const speedX = (x - lastX) / moveTime;\n    const speedY = (y - lastY) / moveTime;\n    const speedT = Math.sqrt(speedX ** 2 + speedY ** 2);\n    // 是否接触到边缘\n    let edgeX = false;\n    let edgeY = false;\n\n    scrollMove(speedT, (spatial) => {\n      const nextX = x + spatial * (speedX / speedT);\n      const nextY = y + spatial * (speedY / speedT);\n\n      const [isEdgeX, currentX] = computePositionEdge(nextX, scale, currentWidth, innerWidth);\n      const [isEdgeY, currentY] = computePositionEdge(nextY, scale, currentHeight, innerHeight);\n\n      if (isEdgeX && !edgeX) {\n        edgeX = true;\n        if (beginEdgeX) {\n          easeOutMove(nextX, currentX, callback.X);\n        } else {\n          rebound(currentX, nextX + (nextX - currentX), callback.X);\n        }\n      }\n\n      if (isEdgeY && !edgeY) {\n        edgeY = true;\n        if (beginEdgeY) {\n          easeOutMove(nextY, currentY, callback.Y);\n        } else {\n          rebound(currentY, nextY + (nextY - currentY), callback.Y);\n        }\n      }\n      // 同时接触边缘的情况下停止滚动\n      if (edgeX && edgeY) {\n        return false;\n      }\n\n      const resultX = edgeX || callback.X(currentX);\n      const resultY = edgeY || callback.Y(currentY);\n      return resultX && resultY;\n    });\n  };\n}\n\n// 加速度\nconst acceleration = -0.001;\n// 阻力\nconst resistance = 0.0002;\n\n/**\n * 通过速度滚动到停止\n */\nfunction scrollMove(initialSpeed: number, callback: (spatial: number) => boolean) {\n  let v = initialSpeed;\n  let s = 0;\n  let lastTime: number | undefined;\n  let frameId = 0;\n\n  const calcMove = (now: number) => {\n    if (!lastTime) {\n      lastTime = now;\n    }\n    const dt = now - lastTime;\n    const direction = Math.sign(initialSpeed);\n    const a = direction * acceleration;\n    const f = Math.sign(-v) * v ** 2 * resistance;\n    const ds = v * dt + ((a + f) * dt ** 2) / 2;\n    v += (a + f) * dt;\n\n    s += ds;\n    // move to s\n    lastTime = now;\n\n    if (direction * v <= 0) {\n      caf();\n      return;\n    }\n\n    if (callback(s)) {\n      raf();\n      return;\n    }\n    caf();\n  };\n  raf();\n\n  function raf() {\n    frameId = requestAnimationFrame(calcMove);\n  }\n  function caf() {\n    cancelAnimationFrame(frameId);\n  }\n}\n\n/**\n * 缓动函数\n */\nconst easeOutQuart = (x: number) => 1 - (1 - x) ** 4;\n\n/**\n * 缓动回调\n */\nfunction easeOutMove(\n  start: number,\n  end: number,\n  callback: (spatial: number) => boolean,\n  speed = defaultSpeed,\n  easing = easeOutQuart,\n  complete?: () => void,\n) {\n  const distance = end - start;\n  if (distance === 0) {\n    return;\n  }\n\n  const startTime = Date.now();\n  let frameId = 0;\n\n  const calcMove = () => {\n    const time = Math.min(1, (Date.now() - startTime) / speed);\n    const result = callback(start + easing(time) * distance);\n\n    if (result && time < 1) {\n      raf();\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    if (time >= 1 && complete) {\n      complete();\n    }\n  };\n  raf();\n\n  function raf() {\n    frameId = requestAnimationFrame(calcMove);\n  }\n}\n", "import type { Dispatch, MutableRefObject, SetStateAction } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport type { EasingMode, OriginRectType } from '../types';\nimport useMethods from './useMethods';\nimport { maxWaitAnimationTime } from '../variables';\n\nconst initialRect: OriginRectType = {\n  T: 0,\n  L: 0,\n  W: 0,\n  H: 0,\n  // 图像填充方式\n  FIT: undefined,\n};\n\nexport default function useAnimationOrigin(\n  visible: boolean | undefined,\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  loaded: boolean,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n): [\n  // 动画状态\n  easingMode: EasingMode,\n  originRect: OriginRectType,\n] {\n  const [originRect, updateOriginRect] = useState(initialRect);\n  // 动画状态\n  const [easingMode, updateEasingMode] = useState<EasingMode>(0);\n  const initialTime = useRef<number>();\n\n  const fn = useMethods({\n    OK: () => visible && updateEasingMode(4),\n  });\n\n  useEffect(() => {\n    // 记录初始打开的时间\n    if (!initialTime.current) {\n      initialTime.current = Date.now();\n    }\n    if (!loaded) {\n      return;\n    }\n    handleUpdateOrigin(originRef, updateOriginRect);\n    // 打开动画处理\n    if (visible) {\n      // 小于最大允许动画时间，则执行缩放动画\n      if (Date.now() - initialTime.current < maxWaitAnimationTime) {\n        updateEasingMode(1);\n        // 延时执行动画，保持 transition 生效\n        requestAnimationFrame(() => {\n          updateEasingMode(2);\n          requestAnimationFrame(() => handleToShape(3));\n        });\n        setTimeout(fn.OK, speed);\n        return;\n      }\n      // 超出则不执行\n      updateEasingMode(4);\n      return;\n    }\n    // 关闭动画处理\n    handleToShape(5);\n  }, [visible, loaded]);\n\n  function handleToShape(currentShape: EasingMode) {\n    updateEasing(false);\n    updateEasingMode(currentShape);\n  }\n\n  return [easingMode, originRect];\n}\n\n/**\n * 更新缩略图位置信息\n */\nfunction handleUpdateOrigin(\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  updateOriginRect: Dispatch<SetStateAction<typeof initialRect>>,\n) {\n  const element = originRef && originRef.current;\n\n  if (element && element.nodeType === 1) {\n    // 获取触发时节点位置\n    const { top, left, width, height } = element.getBoundingClientRect();\n    const isImage = element.tagName === 'IMG';\n    updateOriginRect({\n      T: top,\n      L: left,\n      W: width,\n      H: height,\n      FIT: isImage ? (getComputedStyle(element).objectFit as 'contain' | 'cover' | 'fill' | undefined) : undefined,\n    });\n  }\n}\n", "import { useEffect, useRef } from 'react';\n\nconst useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n};\n\nexport default useMountedRef;\n", "import React from 'react';\nimport './Spinner.less';\n\n// eslint-disable-next-line react/prop-types\nfunction Spinner({ className = '', ...props }: React.HTMLAttributes<HTMLElement>) {\n  return (\n    <div className={`PhotoView__Spinner ${className}`} {...props}>\n      <svg viewBox=\"0 0 32 32\" width=\"36\" height=\"36\" fill=\"white\">\n        <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n        <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n", "import React from 'react';\nimport Spinner from './components/Spinner';\nimport useMountedRef from './hooks/useMountedRef';\nimport type { BrokenElementParams } from './types';\nimport './Photo.less';\n\nexport interface IPhotoLoadedParams {\n  loaded?: boolean;\n  naturalWidth?: number;\n  naturalHeight?: number;\n  broken?: boolean;\n}\n\nexport interface IPhotoProps extends React.HTMLAttributes<HTMLElement> {\n  src: string;\n  loaded: boolean;\n  broken: boolean;\n  onPhotoLoad: (params: IPhotoLoadedParams) => void;\n  loadingElement?: JSX.Element;\n  brokenElement?: JSX.Element | ((photoProps: BrokenElementParams) => JSX.Element);\n}\n\nexport default function Photo({\n  src,\n  loaded,\n  broken,\n  className,\n  onPhotoLoad,\n  loadingElement,\n  brokenElement,\n  ...restProps\n}: IPhotoProps) {\n  const mountedRef = useMountedRef();\n\n  function handleImageLoaded(e: React.SyntheticEvent<HTMLImageElement>) {\n    const { naturalWidth, naturalHeight } = e.target as HTMLImageElement;\n    if (mountedRef.current) {\n      onPhotoLoad({\n        loaded: true,\n        naturalWidth,\n        naturalHeight,\n      });\n    }\n  }\n\n  function handleImageBroken() {\n    if (mountedRef.current) {\n      onPhotoLoad({\n        broken: true,\n      });\n    }\n  }\n\n  if (src && !broken) {\n    return (\n      <>\n        <img\n          className={`PhotoView__Photo${className ? ` ${className}` : ''}`}\n          src={src}\n          onLoad={handleImageLoaded}\n          onError={handleImageBroken}\n          alt=\"\"\n          {...restProps}\n        />\n        {!loaded &&\n          (<span className=\"PhotoView__icon\">{loadingElement}</span> || <Spinner className=\"PhotoView__icon\" />)}\n      </>\n    );\n  }\n\n  if (brokenElement) {\n    return (\n      <span className=\"PhotoView__icon\">\n        {typeof brokenElement === 'function' ? brokenElement({ src }) : brokenElement}\n      </span>\n    );\n  }\n\n  return null;\n}\n", "import React, { useRef } from 'react';\nimport isTouchDevice from './utils/isTouchDevice';\nimport getMultipleTouchPosition from './utils/getMultipleTouchPosition';\nimport getPositionOnMoveOrScale from './utils/getPositionOnMoveOrScale';\nimport { getReachType, computePositionEdge } from './utils/edgeHandle';\nimport getRotateSize from './utils/getRotateSize';\nimport { limitScale } from './utils/limitTarget';\nimport getSuitableImageSize from './utils/getSuitableImageSize';\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\nimport { minStartTouchOffset, scaleBuffer } from './variables';\nimport type {\n  DataType,\n  ReachMoveFunction,\n  ReachFunction,\n  PhotoTapFunction,\n  BrokenElementParams,\n  ExposedProperties,\n  ReachType,\n  TouchStartType,\n} from './types';\nimport useSetState from './hooks/useSetState';\nimport useMethods from './hooks/useMethods';\nimport useDebounceCallback from './hooks/useDebounceCallback';\nimport useEventListener from './hooks/useEventListener';\nimport useContinuousTap from './hooks/useContinuousTap';\nimport useScrollPosition from './hooks/useScrollPosition';\nimport useAnimationPosition from './hooks/useAnimationPosition';\nimport useMountedRef from './hooks/useMountedRef';\nimport type { IPhotoLoadedParams } from './Photo';\nimport Photo from './Photo';\nimport './PhotoBox.less';\n\nexport interface PhotoBoxProps {\n  // 图片信息\n  item: DataType;\n  // 是否可见\n  visible: boolean;\n  // 动画时间\n  speed: number;\n  // 动画函数\n  easing: string;\n  // 容器类名\n  wrapClassName?: string;\n  // 图片类名\n  className?: string;\n  // style\n  style?: object;\n  // 自定义 loading\n  loadingElement?: JSX.Element;\n  // 加载失败 Element\n  brokenElement?: JSX.Element | ((photoProps: BrokenElementParams) => JSX.Element);\n\n  // Photo 点击事件\n  onPhotoTap: PhotoTapFunction;\n  // Mask 点击事件\n  onMaskTap: PhotoTapFunction;\n  // 到达边缘滑动事件\n  onReachMove: ReachMoveFunction;\n  // 触摸解除事件\n  onReachUp: ReachFunction;\n  // Resize 事件\n  onPhotoResize: () => void;\n  // 向父组件导出属性\n  expose: (state: ExposedProperties) => void;\n  // 是否在当前操作中\n  isActive: boolean;\n}\n\nconst initialState = {\n  // 真实宽度\n  naturalWidth: undefined as number | undefined,\n  // 真实高度\n  naturalHeight: undefined as number | undefined,\n  // 宽度\n  width: undefined as number | undefined,\n  // 高度\n  height: undefined as number | undefined,\n  // 加载成功状态\n  loaded: undefined as boolean | undefined,\n  // 破碎状态\n  broken: false,\n\n  // 图片 X 偏移量\n  x: 0,\n  // 图片 y 偏移量\n  y: 0,\n  // 图片处于触摸的状态\n  touched: false,\n  // 背景处于触摸状态\n  maskTouched: false,\n  // 旋转状态\n  rotate: 0,\n  // 放大缩小\n  scale: 1,\n\n  // 触摸开始时 x 原始坐标\n  CX: 0,\n  // 触摸开始时 y 原始坐标\n  CY: 0,\n\n  // 触摸开始时图片 x 偏移量\n  lastX: 0,\n  // 触摸开始时图片 y 偏移量\n  lastY: 0,\n  // 上一个触摸状态 x 原始坐标\n  lastCX: 0,\n  // 上一个触摸状态 y 原始坐标\n  lastCY: 0,\n  // 上一个触摸状态的 scale\n  lastScale: 1,\n\n  // 触摸开始时时间\n  touchTime: 0,\n  // 多指触控间距\n  touchLength: 0,\n  // 是否暂停 transition\n  pause: true,\n  // 停止 Raf\n  stopRaf: true,\n  // 当前边缘触发状态\n  reach: undefined as ReachType,\n};\n\nexport default function PhotoBox({\n  item: { src, render, width: customWidth = 0, height: customHeight = 0, originRef },\n  visible,\n  speed,\n  easing,\n  wrapClassName,\n  className,\n  style,\n  loadingElement,\n  brokenElement,\n\n  onPhotoTap,\n  onMaskTap,\n  onReachMove,\n  onReachUp,\n  onPhotoResize,\n  isActive,\n  expose,\n}: PhotoBoxProps) {\n  const [state, updateState] = useSetState(initialState);\n  const initialTouchRef = useRef<TouchStartType>(0);\n  const mounted = useMountedRef();\n\n  const {\n    naturalWidth = customWidth,\n    naturalHeight = customHeight,\n    width = customWidth,\n    height = customHeight,\n    loaded = !src,\n    broken,\n    x,\n    y,\n    touched,\n    stopRaf,\n    maskTouched,\n    rotate,\n    scale,\n    CX,\n    CY,\n    lastX,\n    lastY,\n    lastCX,\n    lastCY,\n    lastScale,\n    touchTime,\n    touchLength,\n    pause,\n    reach,\n  } = state;\n\n  const fn = useMethods({\n    onScale: (current: number) => onScale(limitScale(current)),\n    onRotate(current: number) {\n      if (rotate !== current) {\n        expose({ rotate: current });\n        updateState({ rotate: current, ...getSuitableImageSize(naturalWidth, naturalHeight, current) });\n      }\n    },\n  });\n\n  // 默认为屏幕中心缩放\n  function onScale(current: number, clientX?: number, clientY?: number) {\n    if (scale !== current) {\n      expose({ scale: current });\n      updateState({\n        scale: current,\n        ...getPositionOnMoveOrScale(x, y, width, height, scale, current, clientX, clientY),\n        ...(current <= 1 && { x: 0, y: 0 }),\n      });\n    }\n  }\n\n  const handleMove = useDebounceCallback(\n    (nextClientX: number, nextClientY: number, currentTouchLength: number = 0) => {\n      if ((touched || maskTouched) && isActive) {\n        // 通过旋转调换宽高\n        const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\n        // 单指最小缩放下，以初始移动距离来判断意图\n        if (currentTouchLength === 0 && initialTouchRef.current === 0) {\n          const isStillX = Math.abs(nextClientX - CX) <= minStartTouchOffset;\n          const isStillY = Math.abs(nextClientY - CY) <= minStartTouchOffset;\n          // 初始移动距离不足\n          if (isStillX && isStillY) {\n            // 方向记录上次移动距离，以便平滑过渡\n            updateState({ lastCX: nextClientX, lastCY: nextClientY });\n            return;\n          }\n          // 设置响应状态\n          initialTouchRef.current = !isStillX ? 1 : nextClientY > CY ? 3 : 2;\n        }\n\n        const offsetX = nextClientX - lastCX;\n        const offsetY = nextClientY - lastCY;\n        // 边缘触发状态\n        let currentReach: ReachType;\n        if (currentTouchLength === 0) {\n          // 边缘超出状态\n          const [horizontalCloseEdge] = computePositionEdge(offsetX + lastX, scale, currentWidth, innerWidth);\n          const [verticalCloseEdge] = computePositionEdge(offsetY + lastY, scale, currentHeight, innerHeight);\n          // 边缘触发检测\n          currentReach = getReachType(initialTouchRef.current, horizontalCloseEdge, verticalCloseEdge, reach);\n\n          // 接触边缘\n          if (currentReach !== undefined) {\n            onReachMove(currentReach, nextClientX, nextClientY, scale);\n          }\n        }\n        // 横向边缘触发、背景触发禁用当前滑动\n        if (currentReach === 'x' || maskTouched) {\n          updateState({ reach: 'x' });\n          return;\n        }\n        // 目标倍数\n        const toScale = limitScale(\n          scale + ((currentTouchLength - touchLength) / 100 / 2) * scale,\n          naturalWidth / width,\n          scaleBuffer,\n        );\n        // 导出变量\n        expose({ scale: toScale });\n        updateState({\n          touchLength: currentTouchLength,\n          reach: currentReach,\n          scale: toScale,\n          ...getPositionOnMoveOrScale(x, y, width, height, scale, toScale, nextClientX, nextClientY, offsetX, offsetY),\n        });\n      }\n    },\n    {\n      maxWait: 8,\n    },\n  );\n\n  function updateRaf(position: { x?: number; y?: number }) {\n    if (stopRaf || touched) {\n      return false;\n    }\n    if (mounted.current) {\n      // 下拉关闭时可以有动画\n      updateState({ ...position, pause: visible });\n    }\n    return mounted.current;\n  }\n\n  const slideToPosition = useScrollPosition(\n    (nextX) => updateRaf({ x: nextX }),\n    (nextY) => updateRaf({ y: nextY }),\n    (nextScale) => {\n      if (mounted.current) {\n        expose({ scale: nextScale });\n        updateState({ scale: nextScale });\n      }\n      return !touched && mounted.current;\n    },\n  );\n\n  const handlePhotoTap = useContinuousTap(onPhotoTap, (currentClientX: number, currentClientY: number) => {\n    if (!reach) {\n      // 若图片足够大，则放大适应的倍数\n      const endScale = scale !== 1 ? 1 : Math.max(2, naturalWidth / width);\n      onScale(endScale, currentClientX, currentClientY);\n    }\n  });\n\n  function handleUp(nextClientX: number, nextClientY: number) {\n    // 重置响应状态\n    initialTouchRef.current = 0;\n    if ((touched || maskTouched) && isActive) {\n      updateState({\n        touched: false,\n        maskTouched: false,\n        pause: false,\n        stopRaf: false,\n        reach: undefined,\n      });\n      const safeScale = limitScale(scale, naturalWidth / width);\n      // Go\n      slideToPosition(x, y, lastX, lastY, width, height, scale, safeScale, lastScale, rotate, touchTime);\n\n      onReachUp(nextClientX, nextClientY);\n      // 触发 Tap 事件\n      if (CX === nextClientX && CY === nextClientY) {\n        if (touched) {\n          handlePhotoTap(nextClientX, nextClientY);\n          return;\n        }\n        if (maskTouched) {\n          onMaskTap(nextClientX, nextClientY);\n        }\n      }\n    }\n  }\n\n  useEventListener(isTouchDevice ? undefined : 'mousemove', (e) => {\n    e.preventDefault();\n    handleMove(e.clientX, e.clientY);\n  });\n  useEventListener(isTouchDevice ? undefined : 'mouseup', (e) => {\n    handleUp(e.clientX, e.clientY);\n  });\n  useEventListener(\n    isTouchDevice ? 'touchmove' : undefined,\n    (e) => {\n      e.preventDefault();\n      const position = getMultipleTouchPosition(e);\n      handleMove(...position);\n    },\n    { passive: false },\n  );\n  useEventListener(\n    isTouchDevice ? 'touchend' : undefined,\n    ({ changedTouches }) => {\n      const touch = changedTouches[0];\n      handleUp(touch.clientX, touch.clientY);\n    },\n    { passive: false },\n  );\n  useEventListener(\n    'resize',\n    useDebounceCallback(\n      () => {\n        if (loaded && !touched) {\n          updateState(getSuitableImageSize(naturalWidth, naturalHeight, rotate));\n          onPhotoResize();\n        }\n      },\n      { maxWait: 8 },\n    ),\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (isActive) {\n      expose({ scale, rotate, ...fn });\n    }\n  }, [isActive]);\n\n  function handlePhotoLoad(params: IPhotoLoadedParams) {\n    updateState({\n      ...params,\n      ...(params.loaded && getSuitableImageSize(params.naturalWidth || 0, params.naturalHeight || 0, rotate)),\n    });\n  }\n\n  function handleStart(currentClientX: number, currentClientY: number, currentTouchLength: number = 0) {\n    updateState({\n      touched: true,\n      CX: currentClientX,\n      CY: currentClientY,\n      lastCX: currentClientX,\n      lastCY: currentClientY,\n      lastX: x,\n      lastY: y,\n      lastScale: scale,\n      touchLength: currentTouchLength,\n      touchTime: Date.now(),\n    });\n  }\n\n  function handleWheel(e: React.WheelEvent) {\n    if (!reach) {\n      // 限制最大倍数和最小倍数\n      const toScale = limitScale(scale - e.deltaY / 100 / 2, naturalWidth / width);\n      updateState({ stopRaf: true });\n      onScale(toScale, e.clientX, e.clientY);\n    }\n  }\n\n  function handleMaskStart(e: { clientX: number; clientY: number }) {\n    updateState({\n      maskTouched: true,\n      CX: e.clientX,\n      CY: e.clientY,\n      lastX: x,\n      lastY: y,\n    });\n  }\n\n  function handleTouchStart(e: React.TouchEvent) {\n    e.stopPropagation();\n    handleStart(...getMultipleTouchPosition(e));\n  }\n\n  function handleMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n    if (e.button === 0) {\n      handleStart(e.clientX, e.clientY, 0);\n    }\n  }\n\n  // 计算位置\n  const [translateX, translateY, currentWidth, currentHeight, currentScale, opacity, easingMode, FIT] =\n    useAnimationPosition(visible, originRef, loaded, x, y, width, height, scale, speed, (isPause: boolean) =>\n      updateState({ pause: isPause }),\n    );\n  // 图片 objectFit 渐变时间\n  const transitionLayoutTime = easingMode < 4 ? speed / 2 : easingMode > 4 ? speed : 0;\n  const transitionCSS = `transform ${speed}ms ${easing}`;\n\n  const attrs = {\n    className,\n    onMouseDown: isTouchDevice ? undefined : handleMouseDown,\n    onTouchStart: isTouchDevice ? handleTouchStart : undefined,\n    onWheel: handleWheel,\n    style: {\n      width: `${currentWidth}px`,\n      height: `${currentHeight}px`,\n      opacity,\n      objectFit: easingMode === 4 ? undefined : FIT,\n      transform: rotate ? `rotate(${rotate}deg)` : undefined,\n      transition:\n        // 初始状态无渐变\n        easingMode > 2\n          ? `${transitionCSS}, opacity ${speed}ms ease, height ${transitionLayoutTime}ms ${easing}`\n          : undefined,\n    },\n  };\n\n  return (\n    <div\n      className={`PhotoView__PhotoWrap${wrapClassName ? ` ${wrapClassName}` : ''}`}\n      style={style}\n      onMouseDown={!isTouchDevice && isActive ? handleMaskStart : undefined}\n      onTouchStart={isTouchDevice && isActive ? (e) => handleMaskStart(e.touches[0]) : undefined}\n    >\n      <div\n        className=\"PhotoView__PhotoBox\"\n        style={{\n          transform: `matrix(${currentScale}, 0, 0, ${currentScale}, ${translateX}, ${translateY})`,\n          transition: touched || pause ? undefined : transitionCSS,\n          willChange: isActive ? 'transform' : undefined,\n        }}\n      >\n        {src ? (\n          <Photo\n            src={src}\n            loaded={loaded}\n            broken={broken}\n            {...attrs}\n            onPhotoLoad={handlePhotoLoad}\n            loadingElement={loadingElement}\n            brokenElement={brokenElement}\n          />\n        ) : (\n          render && render({ attrs, scale: currentScale, rotate })\n        )}\n      </div>\n    </div>\n  );\n}\n", "import { useRef } from 'react';\nimport useDebounceCallback from './useDebounceCallback';\n\nexport type TapFuncType<T> = (...args: T[]) => void;\n\n/**\n * 单击和双击事件处理\n * @param singleTap - 单击事件\n * @param doubleTap - 双击事件\n * @return invokeTap\n */\nexport default function useContinuousTap<T>(singleTap: TapFuncType<T>, doubleTap: TapFuncType<T>): TapFuncType<T> {\n  // 当前连续点击次数\n  const continuousClick = useRef(0);\n\n  const debounceTap = useDebounceCallback(\n    (...args) => {\n      continuousClick.current = 0;\n      singleTap(...args);\n    },\n    {\n      wait: 300,\n    },\n  );\n\n  return function invokeTap(...args) {\n    continuousClick.current += 1;\n    debounceTap(...args);\n    // 双击\n    if (continuousClick.current >= 2) {\n      debounceTap.cancel();\n      continuousClick.current = 0;\n      doubleTap(...args);\n    }\n  };\n}\n", "import type { MutableRefObject } from 'react';\nimport useAnimationOrigin from './useAnimationOrigin';\nimport useTargetScale from './useTargetScale';\n\nexport default function useAnimationPosition(\n  visible: boolean | undefined,\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  loaded: boolean,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  scale: number,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n) {\n  // 延迟更新 width/height\n  const [autoWidth, autoHeight, autoScale] = useTargetScale(width, height, scale, speed, updateEasing);\n  // 动画源处理\n  const [easingMode, originRect] = useAnimationOrigin(visible, originRef, loaded, speed, updateEasing);\n\n  // 计算动画位置\n  const { T, L, W, H, FIT } = originRect;\n  // 偏移量，x: 0, y: 0 居中为初始\n  const centerWidth = innerWidth / 2;\n  const centerHeight = innerHeight / 2;\n  const offsetX = centerWidth - (width * scale) / 2;\n  const offsetY = centerHeight - (height * scale) / 2;\n  // 缩略图状态\n  const miniMode = easingMode < 3 || easingMode > 4;\n  // 有缩略图时，则为缩略图的位置，否则居中\n  const translateX = miniMode ? (W ? L : centerWidth) : x + offsetX;\n  const translateY = miniMode ? (W ? T : centerHeight) : y + offsetY;\n\n  // 最小值缩放\n  const minScale = W / (width * scale) || 0.01;\n\n  // 适应 objectFit 保持缩略图宽高比\n  const currentHeight = miniMode && FIT ? autoWidth * (H / W) : autoHeight;\n  // 初始加载情况无缩放\n  const currentScale = easingMode === 0 ? autoScale : miniMode ? minScale : autoScale;\n  const opacity = miniMode ? (FIT ? 1 : 0) : 1;\n\n  return [translateX, translateY, autoWidth, currentHeight, currentScale, opacity, easingMode, FIT] as const;\n}\n", "import { useRef } from 'react';\nimport useSetState from './useSetState';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport useDebounceCallback from './useDebounceCallback';\n\n/**\n * 目标缩放延迟处理\n */\nexport default function useTargetScale(\n  realWidth: number,\n  realHeight: number,\n  realScale: number,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n) {\n  const execRef = useRef(false);\n\n  const [{ lead, scale }, updateState] = useSetState({ lead: true, scale: realScale });\n\n  const moveScale = useDebounceCallback(\n    async (current: number) => {\n      updateEasing(true);\n      updateState({ lead: false, scale: current });\n    },\n    { wait: speed },\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!execRef.current) {\n      execRef.current = true;\n      return;\n    }\n    updateEasing(false);\n    updateState({ lead: true });\n\n    moveScale(realScale);\n  }, [realScale]);\n\n  // 运动开始\n  if (lead) {\n    return [realWidth * scale, realHeight * scale, realScale / scale] as const;\n  }\n\n  // 运动结束\n  return [realWidth * realScale, realHeight * realScale, 1] as const;\n}\n", "import React, { useRef, useState } from 'react';\nimport type { DataType, PhotoProviderBase, OverlayRenderProps, ReachType } from './types';\nimport { defaultEasing, defaultSpeed, defaultOpacity, horizontalOffset, maxMoveOffset } from './variables';\nimport isTouchDevice from './utils/isTouchDevice';\nimport { limitNumber } from './utils/limitTarget';\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\nimport useAdjacentImages from './hooks/useAdjacentImages';\nimport useSetState from './hooks/useSetState';\nimport useEventListener from './hooks/useEventListener';\nimport useAnimationVisible from './hooks/useAnimationVisible';\nimport useMethods from './hooks/useMethods';\nimport SlidePortal from './components/SlidePortal';\nimport CloseIcon from './components/CloseIcon';\nimport ArrowLeft from './components/ArrowLeft';\nimport ArrowRight from './components/ArrowRight';\nimport PreventScroll from './components/PreventScroll';\nimport PhotoBox from './PhotoBox';\nimport './PhotoSlider.less';\n\nexport interface IPhotoSliderProps extends PhotoProviderBase {\n  // 图片列表\n  images: DataType[];\n  // 图片当前索引\n  index?: number;\n  // 索引改变回调\n  onIndexChange?: (index: number) => void;\n  // 可见\n  visible: boolean;\n  // 关闭回调\n  onClose: (evt?: React.MouseEvent | React.TouchEvent) => void;\n  // 关闭动画结束后回调\n  afterClose?: () => void;\n}\n\ntype PhotoSliderState = {\n  // 偏移量\n  x: number;\n  // 图片处于触摸的状态\n  touched: boolean;\n  // 是否暂停 transition\n  pause: boolean;\n  // Reach 开始时 x 坐标\n  lastCX: number | undefined;\n  // Reach 开始时 y 坐标\n  lastCY: number | undefined;\n  // 背景透明度\n  bg: number | null | undefined;\n  // 上次关闭的背景透明度\n  lastBg: number | null | undefined;\n  // 是否显示 overlay\n  overlay: boolean;\n  // 是否为最小状态，可下拉关闭\n  minimal: boolean;\n  // 缩放\n  scale: number;\n  // 旋转\n  rotate: number;\n  // 缩放回调\n  onScale?: (scale: number) => void;\n  // 旋转回调\n  onRotate?: (rotate: number) => void;\n};\n\nconst initialState: PhotoSliderState = {\n  x: 0,\n  touched: false,\n  pause: false,\n  lastCX: undefined,\n  lastCY: undefined,\n  bg: undefined,\n  lastBg: undefined,\n  overlay: true,\n  minimal: true,\n  scale: 1,\n  rotate: 0,\n};\n\nexport default function PhotoSlider(props: IPhotoSliderProps) {\n  const {\n    loop = 3,\n    speed: speedFn,\n    easing: easingFn,\n    photoClosable,\n    maskClosable = true,\n    maskOpacity = defaultOpacity,\n    pullClosable = true,\n    bannerVisible = true,\n    overlayRender,\n    toolbarRender,\n    className,\n    maskClassName,\n    photoClassName,\n    photoWrapClassName,\n    loadingElement,\n    brokenElement,\n    images,\n    index: controlledIndex = 0,\n    onIndexChange: controlledIndexChange,\n    visible,\n    onClose,\n    afterClose,\n    portalContainer,\n  } = props;\n\n  const [state, updateState] = useSetState(initialState);\n  const [innerIndex, updateInnerIndex] = useState(0);\n\n  const {\n    x,\n    touched,\n    pause,\n\n    lastCX,\n    lastCY,\n\n    bg = maskOpacity,\n    lastBg,\n    overlay,\n    minimal,\n\n    scale,\n    rotate,\n    onScale,\n    onRotate,\n  } = state;\n\n  // 受控 index\n  const isControlled = props.hasOwnProperty('index');\n  const index = isControlled ? controlledIndex : innerIndex;\n  const onIndexChange = isControlled ? controlledIndexChange : updateInnerIndex;\n  // 内部虚拟 index\n  const virtualIndexRef = useRef(index);\n\n  // 当前图片\n  const imageLength = images.length;\n  const currentImage: DataType | undefined = images[index];\n\n  // 是否开启\n  // noinspection SuspiciousTypeOfGuard\n  const enableLoop = typeof loop === 'boolean' ? loop : imageLength > loop;\n\n  // 显示动画处理\n  const [realVisible, activeAnimation, onAnimationEnd] = useAnimationVisible(visible, afterClose);\n\n  useIsomorphicLayoutEffect(() => {\n    // 显示弹出层，修正正确的指向\n    if (realVisible) {\n      updateState({\n        pause: true,\n        x: index * -(innerWidth + horizontalOffset),\n      });\n      virtualIndexRef.current = index;\n      return;\n    }\n    // 关闭后清空状态\n    updateState(initialState);\n  }, [realVisible]);\n\n  const { close, changeIndex } = useMethods({\n    close(evt?: React.MouseEvent | React.TouchEvent) {\n      if (onRotate) {\n        onRotate(0);\n      }\n      updateState({\n        overlay: true,\n        // 记录当前关闭时的透明度\n        lastBg: bg,\n      });\n      onClose(evt);\n    },\n    changeIndex(nextIndex: number, isPause: boolean = false) {\n      // 当前索引\n      const currentIndex = enableLoop ? virtualIndexRef.current + (nextIndex - index) : nextIndex;\n      const max = imageLength - 1;\n      // 虚拟 index\n      // 非循环模式，限制区间\n      const limitIndex = limitNumber(currentIndex, 0, max);\n      const nextVirtualIndex = enableLoop ? currentIndex : limitIndex;\n      // 单个屏幕宽度\n      const singlePageWidth = innerWidth + horizontalOffset;\n\n      updateState({\n        touched: false,\n        lastCX: undefined,\n        lastCY: undefined,\n        x: -singlePageWidth * nextVirtualIndex,\n        pause: isPause,\n      });\n\n      virtualIndexRef.current = nextVirtualIndex;\n      // 更新真实的 index\n      const realLoopIndex = nextIndex < 0 ? max : nextIndex > max ? 0 : nextIndex;\n      if (onIndexChange) {\n        onIndexChange(enableLoop ? realLoopIndex : limitIndex);\n      }\n    },\n  });\n\n  useEventListener('keydown', (evt: KeyboardEvent) => {\n    if (visible) {\n      switch (evt.key) {\n        case 'ArrowLeft':\n          changeIndex(index - 1, true);\n          break;\n        case 'ArrowRight':\n          changeIndex(index + 1, true);\n          break;\n        case 'Escape':\n          close();\n          break;\n        default:\n      }\n    }\n  });\n\n  function handlePhotoTap(closeable: boolean | undefined) {\n    return closeable ? close() : updateState({ overlay: !overlay });\n  }\n\n  function handleResize() {\n    updateState({\n      x: -(innerWidth + horizontalOffset) * index,\n      lastCX: undefined,\n      lastCY: undefined,\n      pause: true,\n    });\n    virtualIndexRef.current = index;\n  }\n\n  function handleReachVerticalMove(clientY: number, nextScale?: number) {\n    if (lastCY === undefined) {\n      updateState({\n        touched: true,\n        lastCY: clientY,\n        bg,\n        minimal: true,\n      });\n      return;\n    }\n    const opacity =\n      maskOpacity === null ? null : limitNumber(maskOpacity, 0.01, maskOpacity - Math.abs(clientY - lastCY) / 100 / 4);\n\n    updateState({\n      touched: true,\n      lastCY,\n      bg: nextScale === 1 ? opacity : maskOpacity,\n      minimal: nextScale === 1,\n    });\n  }\n\n  function handleReachHorizontalMove(clientX: number) {\n    if (lastCX === undefined) {\n      updateState({\n        touched: true,\n        lastCX: clientX,\n        x,\n        pause: false,\n      });\n      return;\n    }\n    const originOffsetClientX = clientX - lastCX;\n    let offsetClientX = originOffsetClientX;\n\n    // 第一张和最后一张超出距离减半\n    if (\n      !enableLoop &&\n      ((index === 0 && originOffsetClientX > 0) || (index === imageLength - 1 && originOffsetClientX < 0))\n    ) {\n      offsetClientX = originOffsetClientX / 2;\n    }\n\n    updateState({\n      touched: true,\n      lastCX,\n      x: -(innerWidth + horizontalOffset) * virtualIndexRef.current + offsetClientX,\n      pause: false,\n    });\n  }\n\n  function handleReachMove(reachPosition: ReachType, clientX: number, clientY: number, nextScale?: number) {\n    if (reachPosition === 'x') {\n      handleReachHorizontalMove(clientX);\n    } else if (reachPosition === 'y') {\n      handleReachVerticalMove(clientY, nextScale);\n    }\n  }\n\n  function handleReachUp(clientX: number, clientY: number) {\n    const offsetClientX = clientX - (lastCX ?? clientX);\n    const offsetClientY = clientY - (lastCY ?? clientY);\n    let willClose = false;\n    // 下一张\n    if (offsetClientX < -maxMoveOffset) {\n      changeIndex(index + 1);\n      return;\n    }\n    // 上一张\n    if (offsetClientX > maxMoveOffset) {\n      changeIndex(index - 1);\n      return;\n    }\n    const singlePageWidth = innerWidth + horizontalOffset;\n    // 当前偏移\n    const currentTranslateX = -singlePageWidth * virtualIndexRef.current;\n\n    if (Math.abs(offsetClientY) > 100 && minimal && pullClosable) {\n      willClose = true;\n      close();\n    }\n    updateState({\n      touched: false,\n      x: currentTranslateX,\n      lastCX: undefined,\n      lastCY: undefined,\n      bg: maskOpacity,\n      overlay: willClose ? true : overlay,\n    });\n  }\n  // 截取相邻的图片\n  const adjacentImages = useAdjacentImages(images, index, enableLoop);\n\n  if (!realVisible) {\n    return null;\n  }\n\n  const currentOverlayVisible = overlay && !activeAnimation;\n  // 关闭过程中使用下拉保存的透明度\n  const currentOpacity = visible ? bg : lastBg;\n  // 覆盖物参数\n  const overlayParams: OverlayRenderProps | undefined = onScale &&\n    onRotate && {\n      images,\n      index,\n      visible,\n      onClose: close,\n      onIndexChange: changeIndex,\n      overlayVisible: currentOverlayVisible,\n      overlay: currentImage && currentImage.overlay,\n      scale,\n      rotate,\n      onScale,\n      onRotate,\n    };\n  // 动画时间\n  const currentSpeed = speedFn ? speedFn(activeAnimation) : defaultSpeed;\n  const currentEasing = easingFn ? easingFn(activeAnimation) : defaultEasing;\n  const slideSpeed = speedFn ? speedFn(3) : defaultSpeed + 200;\n  const slideEasing = easingFn ? easingFn(3) : defaultEasing;\n\n  return (\n    <SlidePortal\n      className={`PhotoView-Portal${!currentOverlayVisible ? ' PhotoView-Slider__clean' : ''}${\n        !visible ? ' PhotoView-Slider__willClose' : ''\n      }${className ? ` ${className}` : ''}`}\n      role=\"dialog\"\n      onClick={(e) => e.stopPropagation()}\n      container={portalContainer}\n    >\n      {visible && <PreventScroll />}\n      <div\n        className={`PhotoView-Slider__Backdrop${maskClassName ? ` ${maskClassName}` : ''}${\n          activeAnimation === 1\n            ? ' PhotoView-Slider__fadeIn'\n            : activeAnimation === 2\n              ? ' PhotoView-Slider__fadeOut'\n              : ''\n        }`}\n        style={{\n          background: currentOpacity ? `rgba(0, 0, 0, ${currentOpacity})` : undefined,\n          transitionTimingFunction: currentEasing,\n          transitionDuration: `${touched ? 0 : currentSpeed}ms`,\n          animationDuration: `${currentSpeed}ms`,\n        }}\n        onAnimationEnd={onAnimationEnd}\n      />\n      {bannerVisible && (\n        <div className=\"PhotoView-Slider__BannerWrap\">\n          <div className=\"PhotoView-Slider__Counter\">\n            {index + 1} / {imageLength}\n          </div>\n          <div className=\"PhotoView-Slider__BannerRight\">\n            {toolbarRender && overlayParams && toolbarRender(overlayParams)}\n            <CloseIcon className=\"PhotoView-Slider__toolbarIcon\" onClick={close} />\n          </div>\n        </div>\n      )}\n      {adjacentImages.map((item: DataType, currentIndex) => {\n        // 截取之前的索引位置\n        const nextIndex =\n          !enableLoop && index === 0 ? index + currentIndex : virtualIndexRef.current - 1 + currentIndex;\n\n        return (\n          <PhotoBox\n            key={enableLoop ? `${item.key}/${item.src}/${nextIndex}` : item.key}\n            item={item}\n            speed={currentSpeed}\n            easing={currentEasing}\n            visible={visible}\n            onReachMove={handleReachMove}\n            onReachUp={handleReachUp}\n            onPhotoTap={() => handlePhotoTap(photoClosable)}\n            onMaskTap={() => handlePhotoTap(maskClosable)}\n            wrapClassName={photoWrapClassName}\n            className={photoClassName}\n            style={{\n              left: `${(innerWidth + horizontalOffset) * nextIndex}px`,\n              transform: `translate3d(${x}px, 0px, 0)`,\n              transition: touched || pause ? undefined : `transform ${slideSpeed}ms ${slideEasing}`,\n            }}\n            loadingElement={loadingElement}\n            brokenElement={brokenElement}\n            onPhotoResize={handleResize}\n            isActive={virtualIndexRef.current === nextIndex}\n            expose={updateState}\n          />\n        );\n      })}\n      {!isTouchDevice && bannerVisible && (\n        <>\n          {(enableLoop || index !== 0) && (\n            <div className=\"PhotoView-Slider__ArrowLeft\" onClick={() => changeIndex(index - 1, true)}>\n              <ArrowLeft />\n            </div>\n          )}\n          {(enableLoop || index + 1 < imageLength) && (\n            <div className=\"PhotoView-Slider__ArrowRight\" onClick={() => changeIndex(index + 1, true)}>\n              <ArrowRight />\n            </div>\n          )}\n        </>\n      )}\n      {overlayRender && overlayParams && (\n        <div className=\"PhotoView-Slider__Overlay\">{overlayRender(overlayParams)}</div>\n      )}\n    </SlidePortal>\n  );\n}\n", "import { useReducer, useRef } from 'react';\nimport type { ActiveAnimationType } from '../types';\nimport useForkedVariable from './useForkedVariable';\n\n/**\n * 动画关闭处理真实关闭状态\n * 通过 onAnimationEnd 回调实现 leaveCallback\n */\nexport default function useAnimationVisible(\n  visible: boolean | undefined,\n  afterClose?: () => void,\n): [realVisible: boolean | undefined, activeAnimation: ActiveAnimationType, onAnimationEnd: () => void] {\n  const [, handleRender] = useReducer((c) => !c, false);\n\n  const activeAnimation = useRef<ActiveAnimationType>(0);\n\n  // 可见状态分支\n  const [realVisible, modifyRealVisible] = useForkedVariable(visible, (modify) => {\n    // 可见状态：设置进入动画\n    if (visible) {\n      modify(visible);\n      activeAnimation.current = 1;\n    } else {\n      activeAnimation.current = 2;\n    }\n  });\n\n  function onAnimationEnd() {\n    // 动画结束后触发渲染\n    handleRender();\n    // 结束动画：设置隐藏状态\n    if (activeAnimation.current === 2) {\n      modifyRealVisible(false);\n      // 触发隐藏回调\n      if (afterClose) {\n        afterClose();\n      }\n    }\n    // 重置状态\n    activeAnimation.current = 0;\n  }\n\n  return [\n    /**\n     * 真实可见状态\n     */\n    realVisible,\n    /**\n     * 正在进行的动画\n     */\n    activeAnimation.current,\n    /**\n     * 动画结束后回调\n     */\n    onAnimationEnd,\n  ];\n}\n", "import { useRef, useMemo } from 'react';\n\n/**\n * 逻辑分叉变量处理\n * 此 hook 不触发额外渲染\n */\nexport default function useForkedVariable<T>(initial: T, updater: (modify: (variable: T) => void) => void) {\n  // 初始分叉变量\n  const forkedRef = useRef(initial);\n\n  function modify(next: T) {\n    forkedRef.current = next;\n  }\n\n  useMemo(() => {\n    // 参数变化之后同步内部分叉变量\n    updater(modify);\n  }, [initial]);\n\n  return [forkedRef.current, modify] as const;\n}\n", "import { useMemo } from 'react';\nimport type { DataType } from '../types';\n\n/**\n * 截取相邻三张图片\n */\nexport default function useAdjacentImages(images: DataType[], index: number, loop: boolean) {\n  return useMemo(() => {\n    const imageLength = images.length;\n    if (loop) {\n      const connected = images.concat(images).concat(images);\n      return connected.slice(imageLength + index - 1, imageLength + index + 2);\n    }\n    return images.slice(Math.max(index - 1, 0), Math.min(index + 2, imageLength + 1));\n  }, [images, index, loop]);\n}\n", "import React, { useMemo, useRef } from 'react';\nimport type { DataType, PhotoProviderBase } from './types';\nimport useMethods from './hooks/useMethods';\nimport useSetState from './hooks/useSetState';\nimport PhotoContext from './photo-context';\nimport PhotoSlider from './PhotoSlider';\n\nexport interface PhotoProviderProps extends PhotoProviderBase {\n  children: React.ReactNode;\n  onIndexChange?: (index: number, state: PhotoProviderState) => void;\n  onVisibleChange?: (visible: boolean, index: number, state: PhotoProviderState) => void;\n}\n\ntype PhotoProviderState = {\n  images: DataType[];\n  visible: boolean;\n  index: number;\n};\n\nconst initialState: PhotoProviderState = {\n  images: [],\n  visible: false,\n  index: 0,\n};\n\nexport default function PhotoProvider({ children, onIndexChange, onVisibleChange, ...restProps }: PhotoProviderProps) {\n  const [state, updateState] = useSetState(initialState);\n  const uniqueIdRef = useRef(0);\n  const { images, visible, index } = state;\n\n  const methods = useMethods({\n    nextId() {\n      return (uniqueIdRef.current += 1);\n    },\n    update(imageItem: DataType) {\n      const currentIndex = images.findIndex((n) => n.key === imageItem.key);\n      if (currentIndex > -1) {\n        const nextImages = images.slice();\n        nextImages.splice(currentIndex, 1, imageItem);\n        updateState({\n          images: nextImages,\n        });\n        return;\n      }\n      updateState((prev) => ({\n        images: prev.images.concat(imageItem),\n      }));\n    },\n    remove(key: number) {\n      updateState((prev) => {\n        const nextImages = prev.images.filter((item) => item.key !== key);\n        const nextEndIndex = nextImages.length - 1;\n        return {\n          images: nextImages,\n          index: Math.min(nextEndIndex, index),\n        };\n      });\n    },\n    show(key: number) {\n      const currentIndex = images.findIndex((item) => item.key === key);\n      updateState({\n        visible: true,\n        index: currentIndex,\n      });\n      if (onVisibleChange) {\n        onVisibleChange(true, currentIndex, state);\n      }\n    },\n  });\n\n  const fn = useMethods({\n    close() {\n      updateState({\n        visible: false,\n      });\n\n      if (onVisibleChange) {\n        onVisibleChange(false, index, state);\n      }\n    },\n    changeIndex(nextIndex: number) {\n      updateState({\n        index: nextIndex,\n      });\n\n      if (onIndexChange) {\n        onIndexChange(nextIndex, state);\n      }\n    },\n  });\n\n  const value = useMemo(() => ({ ...state, ...methods }), [state, methods]);\n\n  return (\n    <PhotoContext.Provider value={value}>\n      {children}\n      <PhotoSlider\n        images={images}\n        visible={visible}\n        index={index}\n        onIndexChange={fn.changeIndex}\n        onClose={fn.close}\n        {...restProps}\n      />\n    </PhotoContext.Provider>\n  );\n}\n", "import type React from 'react';\nimport { useImperativeHandle, Children, cloneElement, useContext, useEffect, useMemo, useRef } from 'react';\nimport useInitial from './hooks/useInitial';\nimport useMethods from './hooks/useMethods';\nimport type { PhotoContextType } from './photo-context';\nimport PhotoContext from './photo-context';\nimport type { PhotoRenderParams } from './types';\n\nexport interface PhotoViewProps {\n  /**\n   * 图片地址\n   */\n  src?: string;\n  /**\n   * 自定义渲染，优先级比 src 低\n   */\n  render?: (props: PhotoRenderParams) => React.ReactNode;\n  /**\n   * 自定义覆盖节点\n   */\n  overlay?: React.ReactNode;\n  /**\n   * 自定义渲染节点宽度\n   */\n  width?: number;\n  /**\n   * 自定义渲染节点高度\n   */\n  height?: number;\n  /**\n   * 子节点，一般为缩略图\n   */\n  children?: React.ReactElement;\n  /**\n   * 触发的事件\n   */\n  triggers?: ('onClick' | 'onDoubleClick')[];\n}\n\nconst PhotoView: React.FC<PhotoViewProps> = ({\n  src,\n  render,\n  overlay,\n  width,\n  height,\n  triggers = ['onClick'],\n  children,\n}) => {\n  const photoContext = useContext<PhotoContextType>(PhotoContext);\n  const key = useInitial(() => photoContext.nextId());\n  const originRef = useRef<HTMLElement>(null);\n\n  useImperativeHandle((children as React.FunctionComponentElement<HTMLElement>)?.ref, () => originRef.current);\n\n  useEffect(() => {\n    return () => {\n      photoContext.remove(key);\n    };\n  }, []);\n\n  function invokeChildrenFn(eventName: string, e: React.SyntheticEvent) {\n    if (children) {\n      const eventFn = children.props[eventName];\n      if (eventFn) {\n        eventFn(e);\n      }\n    }\n  }\n\n  const fn = useMethods({\n    render(props: PhotoRenderParams) {\n      return render && render(props);\n    },\n    show(eventName: string, e: React.MouseEvent) {\n      photoContext.show(key);\n      invokeChildrenFn(eventName, e);\n    },\n  });\n\n  const eventListeners = useMemo(() => {\n    const listener = {};\n    triggers.forEach((eventName) => {\n      listener[eventName] = fn.show.bind(null, eventName);\n    });\n    return listener;\n  }, []);\n\n  useEffect(() => {\n    photoContext.update({\n      key,\n      src,\n      originRef,\n      render: fn.render,\n      overlay,\n      width,\n      height,\n    });\n  }, [src]);\n\n  if (children) {\n    return Children.only(cloneElement(children, { ...eventListeners, ref: originRef }));\n  }\n  return null;\n};\n\nexport default PhotoView;\n", "import { useRef } from 'react';\n\nexport default function useInitial<T extends (...args: any) => any>(callback: T) {\n  const { current } = useRef({ sign: false, fn: undefined as ReturnType<T> });\n  if (!current.sign) {\n    current.sign = true;\n    current.fn = callback();\n  }\n  return current.fn;\n}\n"],
  "mappings": "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",
  "names": ["useMethods", "fn", "current", "useRef", "curr", "undefined", "Object", "create", "keys", "forEach", "key", "n", "call", "useSetState", "initialState", "useReducer", "state", "action", "createContext", "isTouchDevice", "window", "limitNumber", "value", "min", "max", "Math", "limitScale", "scale", "buffer", "test", "navigator", "userAgent", "useEffect", "useLayoutEffect", "useEventListener", "type", "options", "latest", "wrapper", "evt", "addEventListener", "removeEventListener", "SlidePortal", "container", "document", "body", "rest", "createPortal", "React", "CloseIcon", "props", "width", "height", "viewBox", "d", "ArrowLeft", "ArrowRight", "PreventScroll", "style", "lastOverflow", "overflow", "getMultipleTouchPosition", "touches", "clientX", "clientY", "length", "i", "nextClientX", "nextClientY", "sqrt", "computePositionEdge", "position", "size", "innerSize", "closedEdge", "currentWidth", "outOffset", "getPositionOnMoveOrScale", "x", "y", "toScale", "offsetX", "offsetY", "innerWidth", "innerHeight", "closedEdgeX", "centerClientX", "centerClientY", "lastCX", "lastCY", "getRotateSize", "rotate", "isVertical", "getSuitableImageSize", "naturalWidth", "naturalHeight", "r", "currentHeight", "autoWidth", "autoHeight", "pause", "useDebounceCallback", "callback", "leading", "maxWait", "wait", "a", "callbackRef", "prev", "trailingTimeout", "clearTrailing", "clearTimeout", "useCallback", "args", "now", "Date", "apply", "last", "offset", "setTimeout", "cancel", "rebound", "start", "bound", "easeOutMove", "defaultSpeed", "t", "easeOutQuart", "end", "speed", "easing", "complete", "distance", "startTime", "frameId", "calcMove", "time", "raf", "cancelAnimationFrame", "requestAnimationFrame", "initialRect", "T", "L", "W", "H", "FIT", "useMountedRef", "mountedRef", "Spinner", "className", "fill", "opacity", "Photo", "src", "loaded", "broken", "onPhotoLoad", "loadingElement", "brokenElement", "restProps", "onLoad", "e", "target", "onError", "alt", "touched", "maskTouched", "CX", "CY", "lastX", "lastY", "lastScale", "touchTime", "touchLength", "stopRaf", "reach", "PhotoBox", "item", "render", "customWidth", "c", "s", "customHeight", "originRef", "visible", "wrapClassName", "onPhotoTap", "onMaskTap", "onReachMove", "onReachUp", "onPhotoResize", "isActive", "expose", "updateState", "initialTouchRef", "mounted", "onScale", "onRotate", "handleMove", "currentTouchLength", "isStillX", "abs", "isStillY", "currentReach", "horizontalCloseEdge", "initialTouchState", "verticalCloseEdge", "reachPosition", "updateRaf", "singleTap", "doubleTap", "continuousClick", "debounceTap", "callbackX", "callbackY", "callbackS", "slideToPosition", "nextX", "nextY", "nextScale", "X", "spatial", "Y", "S", "safeScale", "touchedTime", "beginEdgeX", "beginX", "beginEdgeY", "beginY", "moveTime", "C", "targetX", "targetY", "speedX", "speedY", "speedT", "edgeX", "edgeY", "initialSpeed", "lastTime", "v", "dt", "direction", "sign", "f", "ds", "caf", "isEdgeX", "currentX", "isEdgeY", "currentY", "resultX", "resultY", "handlePhotoTap", "currentClientX", "currentClientY", "handleUp", "handleStart", "handleMaskStart", "preventDefault", "passive", "touch", "changedTouches", "useIsomorphicLayoutEffect", "updateEasing", "realWidth", "realHeight", "realScale", "execRef", "lead", "moveScale", "autoScale", "useState", "originRect", "updateOriginRect", "easingMode", "updateEasingMode", "initialTime", "OK", "handleToShape", "currentShape", "element", "nodeType", "getBoundingClientRect", "top", "left", "tagName", "getComputedStyle", "objectFit", "centerWidth", "centerHeight", "miniMode", "isPause", "currentScale", "transitionCSS", "attrs", "onMouseDown", "stopPropagation", "button", "onTouchStart", "onWheel", "deltaY", "transform", "transition", "willChange", "params", "bg", "lastBg", "overlay", "minimal", "PhotoSlider", "loop", "speedFn", "easingFn", "photoClosable", "maskClosable", "maskOpacity", "m", "pullClosable", "bannerVisible", "overlayRender", "toolbarRender", "maskClassName", "photoClassName", "photoWrapClassName", "images", "index", "controlledIndex", "controlledIndexChange", "onIndexChange", "onClose", "afterClose", "portalContainer", "innerIndex", "updateInnerIndex", "isControlled", "hasOwnProperty", "virtualIndexRef", "imageLength", "currentImage", "enableLoop", "handleRender", "activeAnimation", "initial", "updater", "forkedRef", "modify", "next", "useMemo", "modifyRealVisible", "realVisible", "onAnimationEnd", "close", "changeIndex", "nextIndex", "currentIndex", "limitIndex", "nextVirtualIndex", "singlePageWidth", "closeable", "handleResize", "handleReachMove", "originOffsetClientX", "offsetClientX", "handleReachUp", "offsetClientY", "willClose", "currentTranslateX", "adjacentImages", "concat", "slice", "currentOverlayVisible", "currentOpacity", "overlayParams", "overlayVisible", "currentSpeed", "currentEasing", "slideSpeed", "slideEasing", "role", "onClick", "background", "transitionTimingFunction", "transitionDuration", "animationDuration", "map", "PhotoProvider", "children", "onVisibleChange", "uniqueIdRef", "methods", "nextId", "update", "imageItem", "findIndex", "nextImages", "splice", "remove", "filter", "show", "PhotoContext", "Provider", "PhotoView", "triggers", "p", "photoContext", "useContext", "useImperativeHandle", "ref", "eventName", "eventFn", "eventListeners", "listener", "bind", "Children", "only", "cloneElement"]
}
